Program.Sub.Preflight.Start
F.Data.DataTable.Create("UPLINV",True)
F.Data.DataTable.AddColumn("UPLINV","PartNumber","String","")
F.Data.DataTable.AddColumn("UPLINV","LocationCode","String","")
F.Data.DataTable.AddColumn("UPLINV","ABCCode","String","")
F.Data.DataTable.AddColumn("UPLINV","ProductLine","String","")
F.Data.DataTable.AddColumn("UPLINV","BinNumber","String","")
F.Data.DataTable.AddColumn("UPLINV","PartDescr","String","")
F.Data.DataTable.AddColumn("UPLINV","PurchasingUM","String","")
F.Data.DataTable.AddColumn("UPLINV","Filler1","String","")
F.Data.DataTable.AddColumn("UPLINV","InventoryUM","String","")
F.Data.DataTable.AddColumn("UPLINV","Filler2","String","")
F.Data.DataTable.AddColumn("UPLINV","PurchasingConv","Float",0)
F.Data.DataTable.AddColumn("UPLINV","OrderQty","Float",0)
F.Data.DataTable.AddColumn("UPLINV","OnHandQty","Float",0)
F.Data.DataTable.AddColumn("UPLINV","ReorderPoint","Float",0)
F.Data.DataTable.AddColumn("UPLINV","UnitCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyJan","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyFeb","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyMar","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyApr","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyMay","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyJun","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyJul","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyAug","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlySep","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyOct","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyNov","Long",0)
F.Data.DataTable.AddColumn("UPLINV","MonthlyDec","Long",0)
F.Data.DataTable.AddColumn("UPLINV","ListPrice","Float",0)
F.Data.DataTable.AddColumn("UPLINV","SortCode","String","")
F.Data.DataTable.AddColumn("UPLINV","LastAudit","Date",V.Ambient.Date)
F.Data.DataTable.AddColumn("UPLINV","LeadTime","String","")
F.Data.DataTable.AddColumn("UPLINV","RMLength","Float",0)
F.Data.DataTable.AddColumn("UPLINV","RMWidth","Float",0)
F.Data.DataTable.AddColumn("UPLINV","RMDensity","Float",0)
F.Data.DataTable.AddColumn("UPLINV","RMShape","String","")
F.Data.DataTable.AddColumn("UPLINV","UseLotBin","String","N")
F.Data.DataTable.AddColumn("UPLINV","Source","String","")
F.Data.DataTable.AddColumn("UPLINV","Vendor","String","")
F.Data.DataTable.AddColumn("UPLINV","UserDef1","String","")
F.Data.DataTable.AddColumn("UPLINV","UserDef2","String","")
F.Data.DataTable.AddColumn("UPLINV","AltDesc1","String","")
F.Data.DataTable.AddColumn("UPLINV","AltDesc2","String","")
F.Data.DataTable.AddColumn("UPLINV","Weight","Float",0)
F.Data.DataTable.AddColumn("UPLINV","LotNumber","String","")
F.Data.DataTable.AddColumn("UPLINV","HeatNumber","String","")
F.Data.DataTable.AddColumn("UPLINV","SerialNumber","String","")
F.Data.DataTable.AddColumn("UPLINV","BinLocation","String","")
F.Data.DataTable.AddColumn("UPLINV","BinDescr","String","")
F.Data.DataTable.AddColumn("UPLINV","PriorYearToDate","Long",0)
F.Data.DataTable.AddColumn("UPLINV","LotBinUser1","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser2","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser3","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser4","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser5","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser6","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser7","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser8","String","")
F.Data.DataTable.AddColumn("UPLINV","LotBinUser9","String","")
F.Data.DataTable.AddColumn("UPLINV","Maximum","Long",0)
F.Data.DataTable.AddColumn("UPLINV","SafetyStock","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","WeightPerFoot","Float",0)
F.Data.DataTable.AddColumn("UPLINV","Filler3","String","")
F.Data.DataTable.AddColumn("UPLINV","LastRecvDate","Date",1/1/1900)
F.Data.DataTable.AddColumn("UPLINV","ShapeNProp","String","")
F.Data.DataTable.AddColumn("UPLINV","StandardHours","Float",0)
F.Data.DataTable.AddColumn("UPLINV","BOMSwitch","String","")
F.Data.DataTable.AddColumn("UPLINV","DropFlag","String","")
F.Data.DataTable.AddColumn("UPLINV","Filler4","String","")
F.Data.DataTable.AddColumn("UPLINV","Serialize","String","N")
F.Data.DataTable.AddColumn("UPLINV","InactivePart","String","N")
F.Data.DataTable.AddColumn("UPLINV","WarrantySerialized","String","N")
F.Data.DataTable.AddColumn("UPLINV","ReqInsp","String","N")
F.Data.DataTable.AddColumn("UPLINV","PriceCat","String","N")
F.Data.DataTable.AddColumn("UPLINV","EstIssueUM","String","")
F.Data.DataTable.AddColumn("UPLINV","PartPriceCode","String","")
F.Data.DataTable.AddColumn("UPLINV","BOMTypeRef","String","N")
F.Data.DataTable.AddColumn("UPLINV","Discount","String","")
F.Data.DataTable.AddColumn("UPLINV","TCF","String","")
F.Data.DataTable.AddColumn("UPLINV","Filler5","String","")
F.Data.DataTable.AddColumn("UPLINV","ConsConvFactor","Float",0)
F.Data.DataTable.AddColumn("UPLINV","PartShelfLife","String","N")
F.Data.DataTable.AddColumn("UPLINV","Filler6","String","")
F.Data.DataTable.AddColumn("UPLINV","CuttingCharge","String","N")
F.Data.DataTable.AddColumn("UPLINV","PrimaryDimension","Float",0)
F.Data.DataTable.AddColumn("UPLINV","SecondaryDimension","Float",0)
F.Data.DataTable.AddColumn("UPLINV","HazardousMat","String","N")
F.Data.DataTable.AddColumn("UPLINV","RequiresLotTrack","String","N")
F.Data.DataTable.AddColumn("UPLINV","RequiresTest","String","N")
F.Data.DataTable.AddColumn("UPLINV","Obsolete","String","N")
F.Data.DataTable.AddColumn("UPLINV","DropShip","String","N")
F.Data.DataTable.AddColumn("UPLINV","DatePartCreated","Date",V.Ambient.Date)
F.Data.DataTable.AddColumn("UPLINV","DoNotCalcABC","String","Y")
F.Data.DataTable.AddColumn("UPLINV","BasePart","String","N")
F.Data.DataTable.AddColumn("UPLINV","AgingGroup","String","")
F.Data.DataTable.AddColumn("UPLINV","ProjectGroup","String","")
F.Data.DataTable.AddColumn("UPLINV","StockingBin","String","")
F.Data.DataTable.AddColumn("UPLINV","WarrantyType","String","")
F.Data.DataTable.AddColumn("UPLINV","AltCostDate","Date",1/1/1900)
F.Data.DataTable.AddColumn("UPLINV","AddlConsPer","Float",0)
F.Data.DataTable.AddColumn("UPLINV","MaterialSurcharge","String","")
F.Data.DataTable.AddColumn("UPLINV","MaterialSurchargeDate","Date",1/1/1900)
F.Data.DataTable.AddColumn("UPLINV","ICVendor","String","")
F.Data.DataTable.AddColumn("UPLINV","Filler7","String","")
F.Data.DataTable.AddColumn("UPLINV","TempPurFlag","String","N")
F.Data.DataTable.AddColumn("UPLINV","AutoNumberLot","String","N")
F.Data.DataTable.AddColumn("UPLINV","IncludePartInBusiness","String","N")
F.Data.DataTable.AddColumn("UPLINV","PackagedBy","String","")
F.Data.DataTable.AddColumn("UPLINV","ShipsOnPallet","String","N")
F.Data.DataTable.AddColumn("UPLINV","PackagedWeight","Float",0)
F.Data.DataTable.AddColumn("UPLINV","PiecesPerCarton","Long",0)
F.Data.DataTable.AddColumn("UPLINV","DefaultCarton","String","")
F.Data.DataTable.AddColumn("UPLINV","DefaultPallet","String","")
F.Data.DataTable.AddColumn("UPLINV","PiecesPerPallet","Long",0)
F.Data.DataTable.AddColumn("UPLINV","CommodityDescr","String","")
F.Data.DataTable.AddColumn("UPLINV","Filler8","String","")
F.Data.DataTable.AddColumn("UPLINV","NMFCNum","String","")
F.Data.DataTable.AddColumn("UPLINV","NMFCSubNum","String","")
F.Data.DataTable.AddColumn("UPLINV","Filler9","String","")
F.Data.DataTable.AddColumn("UPLINV","FreightClass","String","")
F.Data.DataTable.AddColumn("UPLINV","PackagedComponents","String","N")
F.Data.DataTable.AddColumn("UPLINV","GeneratedPartNum","String","")
F.Data.DataTable.AddColumn("UPLINV","GeneratedPart","String","N")
F.Data.DataTable.AddColumn("UPLINV","AltPrice1","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice2","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice3","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice4","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice5","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice6","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice7","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice8","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice9","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice10","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice11","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice12","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice13","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltPrice14","Float",0)
F.Data.DataTable.AddColumn("UPLINV","Filler10","String","")
F.Data.DataTable.AddColumn("UPLINV","OnOrderPO","Float",0)
F.Data.DataTable.AddColumn("UPLINV","OnOrderWO","Float",0)
F.Data.DataTable.AddColumn("UPLINV","Requirements","Float",0)
F.Data.DataTable.AddColumn("UPLINV","LastUsedDate","Date",1/1/1900)
F.Data.DataTable.AddColumn("UPLINV","CurrentUsage","Long",0)
F.Data.DataTable.AddColumn("UPLINV","LastRollMonth","Long",0)
F.Data.DataTable.AddColumn("UPLINV","LeadScheduling","String","N")
F.Data.DataTable.AddColumn("UPLINV","NextCycleDate","Date",1/1/1900)
F.Data.DataTable.AddColumn("UPLINV","Cost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","ExcludeInMultiPartWO","String","")
F.Data.DataTable.AddColumn("UPLINV","SOWOReport","String","")
F.Data.DataTable.AddColumn("UPLINV","Thickness","Float",0)
F.Data.DataTable.AddColumn("UPLINV","Roll","String","N")
F.Data.DataTable.AddColumn("UPLINV","IncludeSlidingDisc","String","N")
F.Data.DataTable.AddColumn("UPLINV","DoNotDisc","String","N")
F.Data.DataTable.AddColumn("UPLINV","StandardCostQty","Float",0)
F.Data.DataTable.AddColumn("UPLINV","TriggerPart","String","N")
F.Data.DataTable.AddColumn("UPLINV","VATProductType","String","")
F.Data.DataTable.AddColumn("UPLINV","SalesTaxExempt","String","N")
F.Data.DataTable.AddColumn("UPLINV","CreatedBy","String",V.Caller.User)
F.Data.DataTable.AddColumn("UPLINV","Drop","String","N")
F.Data.DataTable.AddColumn("UPLINV","DropSize","String","")
F.Data.DataTable.AddColumn("UPLINV","ExpDate","Date",1/1/1900)
F.Data.DataTable.AddColumn("UPLINV","WarrantyMonths","String","")
F.Data.DataTable.AddColumn("UPLINV","Usage","Float",0)
F.Data.DataTable.AddColumn("UPLINV","Filler11","String","")
F.Data.DataTable.AddColumn("UPLINV","AllocFlag","String","N")
F.Data.DataTable.AddColumn("UPLINV","AllocType","String","")
F.Data.DataTable.AddColumn("UPLINV","PONumber","String","")
F.Data.DataTable.AddColumn("UPLINV","POLine","String","")
F.Data.DataTable.AddColumn("UPLINV","DoNotBackflush","String","N")
F.Data.DataTable.AddColumn("UPLINV","InTransitQty","Float",0)
F.Data.DataTable.AddColumn("UPLINV","CertCode","String","")
F.Data.DataTable.AddColumn("UPLINV","CertDate","Date",1/1/1900)
F.Data.DataTable.AddColumn("UPLINV","CountryOfOrigin","String","")
F.Data.DataTable.AddColumn("UPLINV","MaterialUnitCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","LaborUnitCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","OverheadUnitCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","OutsideUnitCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","FreightUnitCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","OtherUnitCost","Float",0)
F.Data.DataTable.AddColumn("UPLINV","AltCostExt","Float",0)
Program.Sub.Preflight.End

Program.Sub.UPLINV.Start
V.Local.iCnt.Declare
V.Local.sVal.Declare
V.Local.sLine.Declare
V.Local.sFile.Declare
V.Local.sFilePath.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.UPLINV.RowCount--,1)
	'Part Number* (1 - 20) (20 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PartNumber!FieldVal," ",20,V.Local.sVal)
	V.Local.sLine.Set(V.Local.sVal.Left20)
	'Location Code (21 - 22) (2 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LocationCode!FieldVal," ",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'ABC Code (23) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ABCCode!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Product Line (24 - 25) (2 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ProductLine!FieldVal," ",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'Bin Number (26 - 31) (6 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).BinNumber!FieldVal," ",6,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left6,V.Local.sLine)
	'Part Description (32 - 61) (30 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PartDescr!FieldVal," ",30,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left30,V.Local.sLine)
	'Purchasing Unit of Measure (62 - 63) (2 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PurchasingUM!FieldVal," ",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'Filler (64) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler1!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Inventory/Selling Unit of Measure (65 - 66) (2 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).InventoryUM!FieldVal," ",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'Filler (67) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler2!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Purchasing Conversion Factor (68 - 83) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).PurchasingConv!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",6,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right6)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",6,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right6)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Order Quantity (84 - 99) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).OrderQty!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'On Hand Quantity (100 - 115) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).OnHandQty!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Reorder Point (116 - 131) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).ReorderPoint!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Unit Cost (132 - 147) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).UnitCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage January (148 - 163) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyJan!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage February (164 - 179) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyFeb!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage March (180 - 195) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyMar!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage April (196 - 211) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyApr!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage May (212 - 227) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyMay!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage June (228 - 243) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyJun!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage July (244 - 259) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyJul!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage August (260 - 275) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyAug!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage September (276 - 291) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlySep!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage October (292 - 307) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyOct!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage November (308 - 323) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyNov!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Monthly Usage December (324 - 339) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MonthlyDec!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'List Price (340 - 355) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).ListPrice!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Sort Code (356 - 365) (10 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).SortCode!FieldVal," ",10,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left10,V.Local.sLine)
	'Last Audit Date (366 - 371) (6 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).LastAudit!FieldVal,"MMDDYY",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Lead Time (372 - 375) (4 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LeadTime!FieldVal," ",4,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left4,V.Local.sLine)
	'Raw Material Length (376 - 391) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).RMLength!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",4,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right4)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",2,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left2)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",4,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right4)
		F.Intrinsic.String.Build("{0}.00",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Raw Material Width (392 - 407) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).RMWidth!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",4,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right4)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",2,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left2)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",4,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right4)
		F.Intrinsic.String.Build("{0}.00",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Raw Material Density (408 - 423) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).RMDensity!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",2,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right2)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",2,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right2)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Raw Material Shape Code (424) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).RMShape!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Use Lot/Bin for this Part (425) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).UseLotBin!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Source (426 - 437) (12 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Source!FieldVal," ",12,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left12,V.Local.sLine)
	'Vendor (438 - 457) (20 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Vendor!FieldVal," ",20,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left20,V.Local.sLine)
	'User Defined Info 1 (458 - 477) (20 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).UserDef1!FieldVal," ",20,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left20,V.Local.sLine)
	'User Defined Info 2 (478 - 497) (20 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).UserDef2!FieldVal," ",20,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left20,V.Local.sLine)
	'Alt Description 1 (498 - 527) (30 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).AltDesc1!FieldVal," ",30,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left30,V.Local.sLine)
	'Alt Description 2 (528 - 557) (30 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).AltDesc2!FieldVal," ",30,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left30,V.Local.sLine)
	'Weight (in pounds) (558 - 573) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).Weight!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",5,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right5)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",5,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right5)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Lot Number (574 - 588) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotNumber!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'Heat Number (589 - 603) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).HeatNumber!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'Serial Number (604 - 633) (30 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).SerialNumber!FieldVal," ",30,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left30,V.Local.sLine)
	'Bin Location (634 - 635) (2 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).BinLocation!FieldVal," ",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'Bin Description (636 - 665) (30 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).BinDescr!FieldVal," ",30,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left30,V.Local.sLine)
	'Prior Year-To-Date Usage (666 - 681) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).PriorYearToDate!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'User Input Info Field 1 (682 - 696) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser1!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 2 (697 - 711) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser2!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 3 (712 - 726) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser3!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 4 (727 - 741) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser4!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 5 (742 - 756) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser5!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 6 (757 - 771) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser6!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 7 (772 - 786) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser7!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 8 (787 - 801) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser8!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'User Input Info Field 9 (802 - 816) (15 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LotBinUser9!FieldVal," ",15,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left15,V.Local.sLine)
	'Maximum (817 - 832) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).Maximum!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Safety Stock (833 - 848) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).SafetyStock!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Alt Cost (849 - 864) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Weight per Foot (865 - 880) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).WeightPerFoot!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",5,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right5)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",5,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right5)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Filler (881 - 896) (16 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler3!FieldVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Last Received Date (897 - 904) (8 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).LastRecvDate!FieldVal,"YYYYMMDD",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Shape and Property Code (905 - 914) (10 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ShapeNProp!FieldVal," ",10,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left10,V.Local.sLine)
	'Standard Hours (915 - 930) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).StandardHours!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",4,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right4)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",3,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left3)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",4,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right4)
		F.Intrinsic.String.Build("{0}.000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'BOM Switch (931) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).BOMSwitch!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Drop Flag (932) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DropFlag!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Filler (933 - 996) (64 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler4!FieldVal," ",64,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left64,V.Local.sLine)
	'Serialize (997) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Serialize!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Inactive Part (998) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).InactivePart!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'WarrantyForSerializedPart (999) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).WarrantySerialized!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Requires Inspection (1000) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ReqInsp!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Price Category (1001) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PriceCat!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Est/Issue Unit of Measure (1002 - 1004) (3 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).EstIssueUM!FieldVal," ",3,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left3,V.Local.sLine)
	'Part Price Code (1005 - 1007) (3 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PartPriceCode!FieldVal," ",3,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left3,V.Local.sLine)
	'BOM Type is Reference (1008) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).BOMTypeRef!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Discount (1009) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Discount!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'TCF (Total Control Flag) (1010) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).TCF!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Filler (1011 - 1017) (7 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler5!FieldVal," ",7,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left7,V.Local.sLine)
	'Consumption Conversion Factor (1018 - 1033) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).ConsConvFactor!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",6,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right6)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",6,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right6)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Part has shelf life (1034) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PartShelfLife!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Filler (1035 - 1036) (2 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler6!FieldVal," ",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'Cutting Charge (1037) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).CuttingCharge!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Primary Dimension (1038 - 1053) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).PrimaryDimension!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",3,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right3)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",3,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right3)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Secondary Dimension (1054 - 1069) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).SecondaryDimension!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",3,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right3)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",3,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right3)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Hazardous Material Flag (1070) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).HazardousMat!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Requires Lot to Lot Tracking (1071) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).RequiresLotTrack!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Requires Testing (1072) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).RequiresTest!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Obsolete (1073) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Obsolete!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Drop Ship (1074) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DropShip!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Date Part Created (1075 - 1082) (8 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).DatePartCreated!FieldVal,"YYYYMMDD",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Do Not Calculate ABC (1083) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DoNotCalcABC!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Base Part (1084) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).BasePart!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Aging Group (1085) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).AgingGroup!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Project Group (1086 - 1091) (6 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ProjectGroup!FieldVal," ",6,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left6,V.Local.sLine)
	'Stocking Bin (1092 - 1097) (6 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).StockingBin!FieldVal," ",6,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left6,V.Local.sLine)
	'Warranty Type (1098 - 1099) (2 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).WarrantyType!FieldVal," ",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'Alt Cost Date (1100 - 1107) (8 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).AltCostDate!FieldVal,"YYYYMMDD",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Additional Consumption Percent (1108 - 1123) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AddlConsPer!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",2,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right2)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",2,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right2)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Material Surcharge Type (1124 - 1143) (20 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).MaterialSurcharge!FieldVal," ",20,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left20,V.Local.sLine)
	'Material Surcharge Base Date (1144 - 1151) (8 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).MaterialSurchargeDate!FieldVal,"YYYYMMDD",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'IC Vendor (1152 - 1157) (6 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ICVendor!FieldVal," ",6,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left6,V.Local.sLine)
	'Filler (1158) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler7!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Temporarily Purchase Flag (1159) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).TempPurFlag!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Auto Number Lots When Receiving (1160) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).AutoNumberLot!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Include Part in Business Web Flag (1161) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).IncludePartInBusiness!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Packaged By (1162) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PackagedBy!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Ships on Pallet Flag (1163) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ShipsOnPallet!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Packaged Weight (1164 - 1179) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).PackagedWeight!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).PackagedWeight!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Pieces per Carton (1180 - 1195) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).PiecesPerCarton!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right8)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).PiecesPerCarton!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Default Carton Code (1196 - 1206) (11 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DefaultCarton!FieldVal," ",11,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left11,V.Local.sLine)
	'Default Pallet Code (1207 - 1217) (11 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DefaultPallet!FieldVal," ",11,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left11,V.Local.sLine)
	'Pieces/Carton per Pallet (1218 - 1233) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).PiecesPerPallet!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right8)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).PiecesPerPallet!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Commodity Description (1234 - 1263) (30 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).CommodityDescr!FieldVal," ",30,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left30,V.Local.sLine)
	'Filler (1264 - 1283) (20 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler8!FieldVal," ",20,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left20,V.Local.sLine)
	'NMFC Number (1284 - 1289) (6 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).NMFCNum!FieldVal," ",6,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left6,V.Local.sLine)
	'NMFC Sub Number (1290 - 1292) (3 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).NMFCSubNum!FieldVal," ",3,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left3,V.Local.sLine)
	'Filler (1293) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler9!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Freight Class (1294 - 1298) (5 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).FreightClass!FieldVal," ",5,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left5,V.Local.sLine)
	'Packaged Components Flag (1299) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PackagedComponents!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Generated Part Number (1300 - 1316) (17 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).GeneratedPartNum!FieldVal," ",17,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left17,V.Local.sLine)
	'Generated Part Flag (1317) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).GeneratedPart!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Alternate Price 1 (1318 - 1336) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice1!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 2 (1337 - 1355) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice2!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 3 (1356 - 1374) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice3!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 4 (1375 - 1393) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice4!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 5 (1394 - 1412) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice5!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 6 (1413 - 1431) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice6!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 7 (1432 - 1450) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice7!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 8 (1451 - 1469) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice8!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 9 (1470 - 1488) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice9!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 10 (1489 - 1507) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice10!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 11 (1508 - 1526) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice11!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 12 (1527 - 1545) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice12!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 13 (1546 - 1564) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice13!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alternate Price 14 (1565 - 1583) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltPrice3!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",5,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left5)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.00000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Filler (1584 - 1697) (114 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler10!FieldVal," ",114,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left114,V.Local.sLine)
	'On Order PO (1698 - 1713) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).OnOrderPO!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).OnOrderPO!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'On Order WO (1714 - 1729) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).OnOrderWO!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).OnOrderWO!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Requirements (1730 - 1745) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).Requirements!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).Requirements!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Last Used Date (1746 - 1751) (6 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).LastUsedDate!FieldVal,"MMDDYY",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Current Usage (1752 - 1767) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).CurrentUsage!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",7,V.Local.sVal)
	V.Local.sVal.Set(V.Local.sVal.Right7)
	F.Intrinsic.String.Build("{0}.",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).CurrentUsage!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Last Roll Month (1768 - 1769) (2 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).LastRollMonth!FieldVal,V.Local.sVal)
	F.Intrinsic.String.LPad(V.Local.sVal,"0",2,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left2,V.Local.sLine)
	'If Lead = 0, Use 0 When Scheduling (1770) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).LeadScheduling!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Next Cycle Date (1771 - 1776) (6 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).NextCycleDate!FieldVal,"MMDDYY",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Cost (1777 - 1792) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).Cost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).Cost!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Exclude in Multi-Part WO's (1793) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).ExcludeInMultiPartWO!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Sales Order/Work Order Labels Report (1794 - 1799) (6 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).SOWOReport!FieldVal," ",6,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left6,V.Local.sLine)
	'Thickness (1800 - 1815) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).Thickness!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",3,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right3)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",4,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left4)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",3,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right3)
		F.Intrinsic.String.Build("{0}.0000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Roll (1816) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Roll!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Include in Sliding Discounts (1817) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).IncludeSlidingDisc!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Do Not Discount (1818) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DoNotDisc!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Standard Cost Qty (1819 - 1834) (16 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).StandardCostQty!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",8,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right8)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",8,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right8)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",16,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left16,V.Local.sLine)
	'Trigger Part (1835) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).TriggerPart!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'VAT Product Type (1836 - 1840) (5 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).VATProductType!FieldVal," ",5,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left5,V.Local.sLine)
	'Sales Tax Exempt (1841) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).SalesTaxExempt!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Created By (1842 - 1849) (8 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).CreatedBy!FieldVal," ",8,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left8,V.Local.sLine)
	'Drop (1850) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Drop!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Drop Size (1851 - 1880) (30 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DropSize!FieldVal," ",30,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left30,V.Local.sLine)
	'Expiration Date (1881 - 1888) (8 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).ExpDate!FieldVal,"MMDDYYYY",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Warranty Months (1889 - 1891) (3 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).WarrantyMonths!FieldVal," ",3,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left3,V.Local.sLine)
	'Usage (1892 - 1910) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).Usage!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",9,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right9)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",9,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right9)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).Usage!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Filler (1911 - 1923) (13 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).Filler11!FieldVal," ",13,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left13,V.Local.sLine)
	'Allocated Flag (1924) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).AllocFlag!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'Allocated Type (1925) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).AllocType!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'PO Number (1926 - 1932) (7 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).PONumber!FieldVal," ",7,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left7,V.Local.sLine)
	'PO Line Number (1933 - 1936) (4 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).POLine!FieldVal," ",4,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left4,V.Local.sLine)
	'Do Not Backflush (1937) (1 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).DoNotBackflush!FieldVal," ",1,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left1,V.Local.sLine)
	'In Transit Quantity (1938 - 1956) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).InTransitQty!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",9,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right9)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",9,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right9)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).InTransitQty!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Cert Code (1957 - 1976) (20 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).CertCode!FieldVal," ",20,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left20,V.Local.sLine)
	'Cert Date (1977 - 1984) (8 char)
	F.Intrinsic.String.Format(V.DataTable.UPLINV(V.Local.iCnt).CertDate!FieldVal,"MMDDYYYY",V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal,V.Local.sLine)
	'Country of Origin (1985 - 1987) (3 char)
	F.Intrinsic.String.RPad(V.DataTable.UPLINV(V.Local.iCnt).CountryOfOrigin!FieldVal," ",3,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left3,V.Local.sLine)
	'Material Unit Cost (1988 - 2006) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).MaterialUnitCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).MaterialUnitCost!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Labor Unit Cost (2007 - 2025) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).LaborUnitCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).LaborUnitCost!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Overhead Unit Cost (2026 - 2044) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).OverheadUnitCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).OverheadUnitCost!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Outside Unit Cost (2045 - 2064) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).OutsideUnitCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).OutsideUnitCost!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Freight Unit Cost (2065 - 2082) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).FreightUnitCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).FreightUnitCost!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Other Unit Cost (2083 - 2101) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).OtherUnitCost!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).OtherUnitCost!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	'Alt Cost Ext (2102 - 2120) (19 char)
	F.Intrinsic.Math.Abs(V.DataTable.UPLINV(V.Local.iCnt).AltCostExt!FieldVal,V.Local.sVal)
	F.Intrinsic.String.Split(V.Local.sVal,".",V.Local.sVal)
	F.Intrinsic.Control.If(V.Local.sVal.UBound,=,1)
		F.Intrinsic.String.LPad(V.Local.sVal(0),"0",10,V.Local.sVal(0))
		V.Local.sVal(0).Set(V.Local.sVal(0).Right10)
		F.Intrinsic.String.RPad(V.Local.sVal(1),"0",6,V.Local.sVal(1))
		V.Local.sVal(1).Set(V.Local.sVal(1).Left6)
		F.Intrinsic.String.Join(V.Local.sVal,".",V.Local.sVal)
		V.Local.sVal.RedimPreserve(0,0)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sVal,"0",10,V.Local.sVal)
		V.Local.sVal.Set(V.Local.sVal.Right10)
		F.Intrinsic.String.Build("{0}.000000",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.UPLINV(V.Local.iCnt).AltCostExt!FieldVal,<,0)
		F.Intrinsic.String.Build("-{0}",V.Local.sVal,V.Local.sVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.RPad(V.Local.sVal," ",19,V.Local.sVal)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sLine,V.Local.sVal.Left19,V.Local.sLine)
	
	F.Intrinsic.Control.If(V.Local.sFile,=,"")
		V.Local.sFile.Set(V.Local.sLine)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sFile,V.Ambient.NewLine,V.Local.sLine,V.Local.sFile)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Data.DataTable.DeleteRow("UPLINV")

F.Intrinsic.Control.If(V.Local.sFile.Trim,!=,"")
	'Write file and run program
	F.Intrinsic.String.Build("{0}\INV.TXT",V.Caller.FilesDir,V.Local.sFilePath)
	F.Intrinsic.File.String2File(V.Local.sFilePath,V.Local.sFile)
	Function.Intrinsic.Debug.InvokeDebugger
	Function.Intrinsic.Debug.Stop
	F.Global.General.CallWrapperSync(50,"UPLINV")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessageUPLINV,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.UPLINV.End

Program.Sub.ErrorMessageUPLINV.Start
'Arguments: ScriptFile, CurrentSubroutine
V.Local.sError.Declare
F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Args.ScriptFile,V.Ambient.Newline,V.Args.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
F.Intrinsic.UI.Msgbox(V.Local.sError)
Program.Sub.ErrorMessageUPLINV.End